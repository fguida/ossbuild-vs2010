application.title=OSSBuild :: Resource Package :: SWT
application.vendor=OSSBuild
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/resources-swt.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.jna.jar=../../../../../Shared/Java/jna.jar
file.reference.ossbuild.jar=../../../../../Shared/Java/ossbuild.jar
file.reference.resources-native-osx-x86-swt.jar=../../../../../Deployment/Java/resources-native-osx-x86-swt.jar
file.reference.resources-native-osx-x86_64-swt.jar=../../../../../Deployment/Java/resources-native-osx-x86_64-swt.jar
file.reference.resources-native-unix-x86-base.jar=../../../../../Deployment/Java/resources-native-unix-x86-base.jar
file.reference.resources-native-unix-x86-swt.jar=../../../../../Deployment/Java/resources-native-unix-x86-swt.jar
file.reference.resources-native-unix-x86_64-swt.jar=../../../../../Deployment/Java/resources-native-unix-x86_64-swt.jar
file.reference.resources-native-windows-x86-base.jar=../../../../../Deployment/Java/resources-native-windows-x86-base.jar
file.reference.resources-native-windows-x86-swt.jar=../../../../../Deployment/Java/resources-native-windows-x86-swt.jar
file.reference.resources-native-windows-x86_64-swt.jar=../../../../../Deployment/Java/resources-native-windows-x86_64-swt.jar
file.reference.swt-windows-x86.jar=lib/swt-windows-x86.jar
includes=**
jar.compress=true
javac.classpath=\
    ${reference.OSSBuild____Resource_Package____Base.jar}:\
    ${file.reference.jna.jar}:\
    ${file.reference.ossbuild.jar}:\
    ${file.reference.swt-windows-x86.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.source=1.6
javac.target=1.6
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit_4.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
meta.inf.dir=${src.dir}/META-INF
platform.active=default_platform
project.OSSBuild____Resource_Package____Base=../base
reference.OSSBuild____Resource_Package____Base.jar=${project.OSSBuild____Resource_Package____Base}/dist/resources-base.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}:\
    ${file.reference.resources-native-osx-x86-swt.jar}:\
    ${file.reference.resources-native-osx-x86_64-swt.jar}:\
    ${file.reference.resources-native-unix-x86-base.jar}:\
    ${file.reference.resources-native-unix-x86-swt.jar}:\
    ${file.reference.resources-native-unix-x86_64-swt.jar}:\
    ${file.reference.resources-native-windows-x86-base.jar}:\
    ${file.reference.resources-native-windows-x86-swt.jar}:\
    ${file.reference.resources-native-windows-x86_64-swt.jar}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
